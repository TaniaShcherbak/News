{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport newsPost from './News_Post.vue';\nimport paginationPostBoard from \"./Pagination.vue\";\nexport default {\n  name: 'postPanel',\n  props: {\n    newQuerry: {\n      type: String,\n      required: true,\n      default: () => {\n        return \"Apple\";\n      }\n    },\n    amount: {\n      default() {\n        return 8;\n      }\n    }\n  },\n  data() {\n    return {\n      posts: null,\n      selectedPost: null,\n      page: 1,\n      totalposts: 10,\n      itemsOnPage: 8\n    };\n  },\n  components: {\n    newsPost,\n    paginationPostBoard\n  },\n  watch: {\n    newQuerry: 'fetchData',\n    amount: 'changeTotalPostsOnPage'\n  },\n  methods: {\n    fetchData() {\n      let querry = 'q=' + this.newQuerry + \"&\";\n      var url = 'https://newsapi.org/v2/everything?' + querry + 'from=2023-08-20&' + 'sortBy=popularity&' + 'apiKey=a053a630c58d46509b7fe99976290f7f';\n      var req = new Request(url);\n      fetch(req).then(response => {\n        return response.json();\n      }).then(data => {\n        this.posts = data;\n        JSON.stringify(this.posts);\n        this.totalposts = this.posts.articles.length;\n        this.updatePage();\n      }).catch(error => {\n        console.log('Помилка: ' + error);\n      });\n    },\n    changeTotalPostsOnPage(amount) {\n      this.itemsOnPage = amount;\n    },\n    changePage(data) {\n      this.page = data;\n    },\n    updatePage() {\n      this.page = 1;\n    }\n  },\n  computed: {\n    totalDisplayedPosts() {\n      let pages = [];\n      for (let i = 1; i <= this.totalposts / this.itemsOnPage; i++) {\n        const startIndex = (this.page - 1) * this.itemsOnPage;\n        const endIndex = startIndex + this.itemsOnPage;\n        pages.push(this.posts.articles.slice(startIndex, endIndex));\n      }\n      console.log(pages[this.page - 1]);\n      return pages[this.page - 1];\n    }\n  },\n  mounted() {\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["newsPost","paginationPostBoard","name","props","newQuerry","type","String","required","default","amount","data","posts","selectedPost","page","totalposts","itemsOnPage","components","watch","methods","fetchData","querry","url","req","Request","fetch","then","response","json","JSON","stringify","articles","length","updatePage","catch","error","console","log","changeTotalPostsOnPage","changePage","computed","totalDisplayedPosts","pages","i","startIndex","endIndex","push","slice","mounted"],"sources":["src/components/PostBoard.vue"],"sourcesContent":["<template>\r\n    <div class=\"panel\">\r\n        <div v-if=\"posts\" class=\"post-board\">\r\n            <newsPost v-for=\"(index, i) in totalDisplayedPosts\" :key=\"i\" :postinfo=\"{\r\n                title: totalDisplayedPosts[i].title, desc: totalDisplayedPosts[i].description, content: totalDisplayedPosts[i].content\r\n                , image: totalDisplayedPosts[i].urlToImage, link:totalDisplayedPosts[i].url\r\n            }\" />\r\n        </div>\r\n        <div v-else>\r\n            <p>Sorry, try another request</p>\r\n        </div>\r\n        <div>\r\n            <paginationPostBoard :total=totalposts :item=amount @pageChanged=\"changePage\" :updatePage=page />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport newsPost from './News_Post.vue';\r\nimport paginationPostBoard from \"./Pagination.vue\"\r\nexport default {\r\n    name: 'postPanel',\r\n    props: {\r\n        newQuerry: {\r\n            type: String,\r\n            required: true,\r\n            default: () => {\r\n                return \"Apple\"\r\n            }\r\n        },\r\n        amount: {\r\n            default() {\r\n                return 8;\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            posts: null,\r\n            selectedPost: null,\r\n            page: 1,\r\n            totalposts: 10,\r\n            itemsOnPage: 8,\r\n        }\r\n    },\r\n    components: {\r\n        newsPost,\r\n        paginationPostBoard\r\n    },\r\n    watch: {\r\n        newQuerry: 'fetchData',\r\n        amount: 'changeTotalPostsOnPage',\r\n\r\n    },\r\n    methods: {\r\n        fetchData() {\r\n            let querry = 'q=' + this.newQuerry + \"&\";\r\n            var url = 'https://newsapi.org/v2/everything?' +\r\n                querry +\r\n                'from=2023-08-20&' +\r\n                'sortBy=popularity&' +\r\n                'apiKey=a053a630c58d46509b7fe99976290f7f';\r\n\r\n            var req = new Request(url);\r\n\r\n            fetch(req)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    this.posts = data;\r\n                    JSON.stringify(this.posts);\r\n                    this.totalposts = this.posts.articles.length;\r\n                    this.updatePage();\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Помилка: ' + error);\r\n                });\r\n        },\r\n        changeTotalPostsOnPage(amount) {\r\n            this.itemsOnPage = amount;\r\n        },\r\n        changePage(data) {\r\n            this.page = data;\r\n        },\r\n        updatePage() {\r\n            this.page = 1;\r\n        }\r\n    },\r\n    computed: {\r\n        totalDisplayedPosts() {\r\n            let pages = [];\r\n            for (let i = 1; i <= (this.totalposts / this.itemsOnPage); i++) {\r\n                const startIndex = (this.page - 1) * this.itemsOnPage;\r\n                const endIndex = startIndex + this.itemsOnPage;\r\n                pages.push(this.posts.articles.slice(startIndex, endIndex));\r\n            }\r\n            console.log(pages[this.page - 1]);\r\n            return pages[this.page - 1];\r\n        },\r\n    },\r\n    mounted() {\r\n        this.fetchData();\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.post-board {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n}\r\n</style>"],"mappings":";AAiBA,OAAAA,QAAA;AACA,OAAAC,mBAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,SAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;MACAC,OAAA,EAAAA,CAAA;QACA;MACA;IACA;IACAC,MAAA;MACAD,QAAA;QACA;MACA;IACA;EACA;EACAE,KAAA;IACA;MACAC,KAAA;MACAC,YAAA;MACAC,IAAA;MACAC,UAAA;MACAC,WAAA;IACA;EACA;EACAC,UAAA;IACAhB,QAAA;IACAC;EACA;EACAgB,KAAA;IACAb,SAAA;IACAK,MAAA;EAEA;EACAS,OAAA;IACAC,UAAA;MACA,IAAAC,MAAA,eAAAhB,SAAA;MACA,IAAAiB,GAAA,0CACAD,MAAA,GACA,qBACA,uBACA;MAEA,IAAAE,GAAA,OAAAC,OAAA,CAAAF,GAAA;MAEAG,KAAA,CAAAF,GAAA,EACAG,IAAA,CAAAC,QAAA;QACA,OAAAA,QAAA,CAAAC,IAAA;MACA,GACAF,IAAA,CAAAf,IAAA;QACA,KAAAC,KAAA,GAAAD,IAAA;QACAkB,IAAA,CAAAC,SAAA,MAAAlB,KAAA;QACA,KAAAG,UAAA,QAAAH,KAAA,CAAAmB,QAAA,CAAAC,MAAA;QACA,KAAAC,UAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,eAAAF,KAAA;MACA;IACA;IACAG,uBAAA5B,MAAA;MACA,KAAAM,WAAA,GAAAN,MAAA;IACA;IACA6B,WAAA5B,IAAA;MACA,KAAAG,IAAA,GAAAH,IAAA;IACA;IACAsB,WAAA;MACA,KAAAnB,IAAA;IACA;EACA;EACA0B,QAAA;IACAC,oBAAA;MACA,IAAAC,KAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,SAAA5B,UAAA,QAAAC,WAAA,EAAA2B,CAAA;QACA,MAAAC,UAAA,SAAA9B,IAAA,aAAAE,WAAA;QACA,MAAA6B,QAAA,GAAAD,UAAA,QAAA5B,WAAA;QACA0B,KAAA,CAAAI,IAAA,MAAAlC,KAAA,CAAAmB,QAAA,CAAAgB,KAAA,CAAAH,UAAA,EAAAC,QAAA;MACA;MACAT,OAAA,CAAAC,GAAA,CAAAK,KAAA,MAAA5B,IAAA;MACA,OAAA4B,KAAA,MAAA5B,IAAA;IACA;EACA;EACAkC,QAAA;IACA,KAAA5B,SAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}