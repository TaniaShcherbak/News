{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" My first component\\r\\n    {{ test == 42 ? \\\"it is 42\\\" : \\\"not 42\\\" }}\\r\\n    <p v-bind:class=\\\"ClassName\\\">Some text</p>\\r\\n    <p v-if=\\\"test == 43\\\">if work</p>\\r\\n    <p v-v-else>else work</p> \"), _createTextVNode(\" \" + _toDisplayString($props.post.name) + \", \" + _toDisplayString($props.post.date) + \" \", 1 /* TEXT */), _hoisted_1, _createTextVNode(\" \" + _toDisplayString($data.testCopy) + \" \", 1 /* TEXT */), _hoisted_2, _createTextVNode(\" \" + _toDisplayString(), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_createCommentVNode","_toDisplayString","$props","post","name","date","_hoisted_1","$data","testCopy","_hoisted_2"],"sources":["D:\\learn_with_panchenko\\src\\components\\Post.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- My first component\r\n    {{ test == 42 ? \"it is 42\" : \"not 42\" }}\r\n    <p v-bind:class=\"ClassName\">Some text</p>\r\n    <p v-if=\"test == 43\">if work</p>\r\n    <p v-v-else>else work</p> -->\r\n    {{ post.name }}, {{ post.date }}\r\n    <br>\r\n    {{testCopy}}\r\n    <br>\r\n    {{}}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"PostComponent\",\r\n  props: {\r\n    post: {\r\n      type: Object,\r\n      required: true,\r\n      default: () => {\r\n        return { name: \"without number\", date: \"today\" };\r\n      },\r\n    },\r\n    test: {\r\n      type: Number,\r\n    },\r\n  },\r\n  mounted() {\r\n    (this.testCopy = this.test), (this.testCopy = 44);\r\n  },\r\n  data() {\r\n    return {\r\n      testCopy: \"\",\r\n      ClassName: \"my-first-component\",\r\n      counter:0\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";gCAQIA,mBAAA,CAAI;gCAEJA,mBAAA,CAAI;;;uBATNC,mBAAA,CAWM,cAVJC,mBAAA,0MAI6B,E,iBAAA,GAC7B,GAAAC,gBAAA,CAAGC,MAAA,CAAAC,IAAI,CAACC,IAAI,IAAG,IAAE,GAAAH,gBAAA,CAAGC,MAAA,CAAAC,IAAI,CAACE,IAAI,IAAG,GAChC,iBAAAC,UAAI,E,iBAAA,GACJ,GAAAL,gBAAA,CAAEM,KAAA,CAAAC,QAAQ,IAAE,GACZ,iBAAAC,UAAI,E,iBAAA,GACJ,GAAAR,gBAAA,CAAE,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}