{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport newsPost from './News_Post.vue';\nimport paginationPostBoard from \"./Pagination.vue\";\nexport default {\n  name: 'postPanel',\n  props: {\n    newQuerry: {\n      type: String,\n      required: true,\n      default: () => {\n        return \"Apple\";\n      }\n    },\n    amount: {\n      default() {\n        return 6;\n      }\n    }\n  },\n  data() {\n    return {\n      posts: null,\n      selectedPost: null,\n      page: 1,\n      totalposts: 10,\n      itemsOnPage: 6\n    };\n  },\n  components: {\n    newsPost,\n    paginationPostBoard\n  },\n  watch: {\n    newQuerry: 'fetchData',\n    amount: 'changeTotalPostsOnPage'\n  },\n  methods: {\n    fetchData() {\n      let querry = 'q=' + this.newQuerry + \"&\";\n      var url = 'https://newsapi.org/v2/everything?' + querry + 'from=2023-08-24&' + 'sortBy=popularity&' + 'apiKey=a053a630c58d46509b7fe99976290f7f';\n      var req = new Request(url);\n      fetch(req).then(response => {\n        return response.json();\n      }).then(data => {\n        this.posts = data;\n        JSON.stringify(this.posts);\n        this.totalposts = this.posts.articles.length;\n        this.updatePage();\n      }).catch(error => {\n        console.log('Помилка: ' + error);\n      });\n    },\n    changeTotalPostsOnPage(amount) {\n      this.itemsOnPage = amount;\n    },\n    changePage(data) {\n      this.page = data;\n    },\n    updatePage() {\n      this.page = 1;\n    }\n  },\n  computed: {\n    totalDisplayedPosts() {\n      let pages = [];\n      for (let i = 1; i <= this.totalposts / this.itemsOnPage; i++) {\n        const startIndex = (this.page - 1) * this.itemsOnPage;\n        const endIndex = startIndex + this.itemsOnPage;\n        pages.push(this.posts.articles.slice(startIndex, endIndex));\n      }\n      return pages[this.page - 1];\n    }\n  },\n  mounted() {\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["newsPost","paginationPostBoard","name","props","newQuerry","type","String","required","default","amount","data","posts","selectedPost","page","totalposts","itemsOnPage","components","watch","methods","fetchData","querry","url","req","Request","fetch","then","response","json","JSON","stringify","articles","length","updatePage","catch","error","console","log","changeTotalPostsOnPage","changePage","computed","totalDisplayedPosts","pages","i","startIndex","endIndex","push","slice","mounted"],"sources":["src/components/PostBoard.vue"],"sourcesContent":["<template>\n    <div class=\"panel\">\n        <div v-if=\"posts\" class=\"post-board\">\n            <newsPost v-for=\"(index, i) in totalDisplayedPosts\" :key=\"i\" :postinfo=\"{\n                title: totalDisplayedPosts[i].title, desc: totalDisplayedPosts[i].description, content: totalDisplayedPosts[i].content\n                , image: totalDisplayedPosts[i].urlToImage, link:totalDisplayedPosts[i].url\n            }\" />\n        </div>\n        <div v-else>\n            <p>Sorry, try another request</p>\n        </div>\n        <div>\n            <paginationPostBoard :total=totalposts :item=amount @pageChanged=\"changePage\" :updatePage=page />\n        </div>\n    </div>\n</template>\n<script>\nimport newsPost from './News_Post.vue';\nimport paginationPostBoard from \"./Pagination.vue\"\nexport default {\n    name: 'postPanel',\n    props: {\n        newQuerry: {\n            type: String,\n            required: true,\n            default: () => {\n                return \"Apple\"\n            }\n        },\n        amount: {\n            default() {\n                return 6;\n            }\n        }\n    },\n    data() {\n        return {\n            posts: null,\n            selectedPost: null,\n            page: 1,\n            totalposts: 10,\n            itemsOnPage: 6,\n        }\n    },\n    components: {\n        newsPost,\n        paginationPostBoard\n    },\n    watch: {\n        newQuerry: 'fetchData',\n        amount: 'changeTotalPostsOnPage',\n\n    },\n    methods: {\n        fetchData() {\n            let querry = 'q=' + this.newQuerry + \"&\";\n            var url = 'https://newsapi.org/v2/everything?' +\n                querry +\n                'from=2023-08-24&' +\n                'sortBy=popularity&' +\n                'apiKey=a053a630c58d46509b7fe99976290f7f';\n\n            var req = new Request(url);\n\n            fetch(req)\n                .then((response) => {\n                    return response.json();\n                })\n                .then((data) => {\n                    this.posts = data;\n                    JSON.stringify(this.posts);\n                    this.totalposts = this.posts.articles.length;\n                    this.updatePage();\n                })\n                .catch((error) => {\n                    console.log('Помилка: ' + error);\n                });\n        },\n        changeTotalPostsOnPage(amount) {\n            this.itemsOnPage = amount;\n        },\n        changePage(data) {\n            this.page = data;\n        },\n        updatePage() {\n            this.page = 1;\n        }\n    },\n    computed: {\n        totalDisplayedPosts() {\n            let pages = [];\n            for (let i = 1; i <= (this.totalposts / this.itemsOnPage); i++) {\n                const startIndex = (this.page - 1) * this.itemsOnPage;\n                const endIndex = startIndex + this.itemsOnPage;\n                pages.push(this.posts.articles.slice(startIndex, endIndex));\n            }\n            return pages[this.page - 1];\n        },\n    },\n    mounted() {\n        this.fetchData();\n    }\n}\n</script>\n\n<style>\n.post-board {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-around;\n}\n</style>"],"mappings":";AAiBA,OAAAA,QAAA;AACA,OAAAC,mBAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,SAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;MACAC,OAAA,EAAAA,CAAA;QACA;MACA;IACA;IACAC,MAAA;MACAD,QAAA;QACA;MACA;IACA;EACA;EACAE,KAAA;IACA;MACAC,KAAA;MACAC,YAAA;MACAC,IAAA;MACAC,UAAA;MACAC,WAAA;IACA;EACA;EACAC,UAAA;IACAhB,QAAA;IACAC;EACA;EACAgB,KAAA;IACAb,SAAA;IACAK,MAAA;EAEA;EACAS,OAAA;IACAC,UAAA;MACA,IAAAC,MAAA,eAAAhB,SAAA;MACA,IAAAiB,GAAA,0CACAD,MAAA,GACA,qBACA,uBACA;MAEA,IAAAE,GAAA,OAAAC,OAAA,CAAAF,GAAA;MAEAG,KAAA,CAAAF,GAAA,EACAG,IAAA,CAAAC,QAAA;QACA,OAAAA,QAAA,CAAAC,IAAA;MACA,GACAF,IAAA,CAAAf,IAAA;QACA,KAAAC,KAAA,GAAAD,IAAA;QACAkB,IAAA,CAAAC,SAAA,MAAAlB,KAAA;QACA,KAAAG,UAAA,QAAAH,KAAA,CAAAmB,QAAA,CAAAC,MAAA;QACA,KAAAC,UAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,eAAAF,KAAA;MACA;IACA;IACAG,uBAAA5B,MAAA;MACA,KAAAM,WAAA,GAAAN,MAAA;IACA;IACA6B,WAAA5B,IAAA;MACA,KAAAG,IAAA,GAAAH,IAAA;IACA;IACAsB,WAAA;MACA,KAAAnB,IAAA;IACA;EACA;EACA0B,QAAA;IACAC,oBAAA;MACA,IAAAC,KAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,SAAA5B,UAAA,QAAAC,WAAA,EAAA2B,CAAA;QACA,MAAAC,UAAA,SAAA9B,IAAA,aAAAE,WAAA;QACA,MAAA6B,QAAA,GAAAD,UAAA,QAAA5B,WAAA;QACA0B,KAAA,CAAAI,IAAA,MAAAlC,KAAA,CAAAmB,QAAA,CAAAgB,KAAA,CAAAH,UAAA,EAAAC,QAAA;MACA;MACA,OAAAH,KAAA,MAAA5B,IAAA;IACA;EACA;EACAkC,QAAA;IACA,KAAA5B,SAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}