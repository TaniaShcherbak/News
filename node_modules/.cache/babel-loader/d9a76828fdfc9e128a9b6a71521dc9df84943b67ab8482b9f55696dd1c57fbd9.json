{"ast":null,"code":"export default {\n  name: \"weatherPanel\",\n  data() {\n    return {\n      weather: null,\n      icon: null,\n      city: 'Vinnitsa'\n    };\n  },\n  methods: {\n    getrequest() {\n      let search = document.getElementById(\"searchWeather\").value;\n      this.city = search;\n      this.fetchWeather();\n      document.getElementById(\"searchWeather\").value = \"\";\n    },\n    show() {\n      let degrees = document.getElementById('degrees-color');\n      this.weather.current.temp_c > 0 ? degrees.style.color = 'yellow' : degrees.style.color = 'blue';\n    },\n    fetchWeather() {\n      const url = 'https://weatherapi-com.p.rapidapi.com/forecast.json?q=' + this.city + '&days=3';\n      const options = {\n        method: 'GET',\n        headers: {\n          'X-RapidAPI-Key': '63832d5d1fmshab60483220d5186p143190jsnbc1bac78b8e2',\n          'X-RapidAPI-Host': 'weatherapi-com.p.rapidapi.com'\n        }\n      };\n      fetch(url, options).then(response => {\n        return response.json();\n      }).then(data => {\n        this.weather = data;\n        JSON.stringify(this.weather);\n        this.icon = \"https:\" + this.weather.current.condition.icon;\n      }).catch(error => {\n        console.log('Помилка: ' + error);\n      });\n    }\n  },\n  mounted() {\n    this.fetchWeather();\n  }\n};","map":{"version":3,"names":["name","data","weather","icon","city","methods","getrequest","search","document","getElementById","value","fetchWeather","show","degrees","current","temp_c","style","color","url","options","method","headers","fetch","then","response","json","JSON","stringify","condition","catch","error","console","log","mounted"],"sources":["src/components/Weather.vue"],"sourcesContent":["<template>\n    <div v-if=\"weather\" class=\"weather\">\n        <div>\n            <p>{{ weather.location.name }} {{ weather.location.country }}</p>\n            <p>{{ weather.location.localtime }}</p>\n            <p id=\"degrees-color\">{{ weather.current.temp_c}} &#8451;</p>\n            <input type=\"text\" placeholder=\"type in city\" name=\"searchWeather\" id=\"searchWeather\" @keyup.enter=\"getrequest\">\n        </div>\n        <div>\n            <img :src=\"icon\" alt=\"day/night\">\n        </div>\n\n    </div>\n</template>\n<script>\nexport default {\n    name: \"weatherPanel\",\n    data() {\n        return {\n            weather: null,\n            icon: null,\n            city: 'Vinnitsa'\n        }\n    },\n    methods: {\n        getrequest() {\n            let search = document.getElementById(\"searchWeather\").value;\n            this.city = search;\n            this.fetchWeather();\n            document.getElementById(\"searchWeather\").value = \"\";\n        },\n        show(){\n            let degrees = document.getElementById('degrees-color');\n            this.weather.current.temp_c > 0 ? degrees.style.color = 'yellow' : degrees.style.color = 'blue';\n        },\n        fetchWeather() {\n            const url = 'https://weatherapi-com.p.rapidapi.com/forecast.json?q=' + this.city + '&days=3';\n            const options = {\n                method: 'GET',\n                headers: {\n                    'X-RapidAPI-Key': '63832d5d1fmshab60483220d5186p143190jsnbc1bac78b8e2',\n                    'X-RapidAPI-Host': 'weatherapi-com.p.rapidapi.com'\n                }\n            };\n            fetch(url, options)\n                .then((response) => {\n                    return response.json();\n                })\n                .then((data) => {\n                    this.weather = data;\n                    JSON.stringify(this.weather);\n                    this.icon = \"https:\" + this.weather.current.condition.icon;\n                })\n                .catch((error) => {\n                    console.log('Помилка: ' + error);\n                });\n        }\n    },\n    mounted() {\n        this.fetchWeather();\n    }\n}\n</script>\n<style>\n.weather {\n    min-width: 400px;\n    /* background-color: #15222c; */\n    color: white;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n    border-radius: 15px;\n    padding: 20px;\n}\n.weather div p{\n    font-size: 20px;\n}\n\n.weather img {\n    width: 100px;\n}\n\n.weather input {\n    height: 30px;\n    padding-left: 10px;\n}\n\n.weather input::placeholder {\n    padding-left: 5px;\n}\n</style>"],"mappings":"AAeA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,IAAA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,IAAAC,MAAA,GAAAC,QAAA,CAAAC,cAAA,kBAAAC,KAAA;MACA,KAAAN,IAAA,GAAAG,MAAA;MACA,KAAAI,YAAA;MACAH,QAAA,CAAAC,cAAA,kBAAAC,KAAA;IACA;IACAE,KAAA;MACA,IAAAC,OAAA,GAAAL,QAAA,CAAAC,cAAA;MACA,KAAAP,OAAA,CAAAY,OAAA,CAAAC,MAAA,OAAAF,OAAA,CAAAG,KAAA,CAAAC,KAAA,cAAAJ,OAAA,CAAAG,KAAA,CAAAC,KAAA;IACA;IACAN,aAAA;MACA,MAAAO,GAAA,mEAAAd,IAAA;MACA,MAAAe,OAAA;QACAC,MAAA;QACAC,OAAA;UACA;UACA;QACA;MACA;MACAC,KAAA,CAAAJ,GAAA,EAAAC,OAAA,EACAI,IAAA,CAAAC,QAAA;QACA,OAAAA,QAAA,CAAAC,IAAA;MACA,GACAF,IAAA,CAAAtB,IAAA;QACA,KAAAC,OAAA,GAAAD,IAAA;QACAyB,IAAA,CAAAC,SAAA,MAAAzB,OAAA;QACA,KAAAC,IAAA,mBAAAD,OAAA,CAAAY,OAAA,CAAAc,SAAA,CAAAzB,IAAA;MACA,GACA0B,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,eAAAF,KAAA;MACA;IACA;EACA;EACAG,QAAA;IACA,KAAAtB,YAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}