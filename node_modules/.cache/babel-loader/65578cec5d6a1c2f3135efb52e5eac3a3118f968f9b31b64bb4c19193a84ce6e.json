{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"post-board\"\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Sorry, try another request\", -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_3];\nexport function render(_ctx, _cache) {\n  const _component_newsPost = _resolveComponent(\"newsPost\");\n  const _component_paginationPostBoard = _resolveComponent(\"paginationPostBoard\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"panel\",\n    \"on:pageChanged\": _cache[0] || (_cache[0] = (...args) => _ctx.changePage && _ctx.changePage(...args))\n  }, [_ctx.posts ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.totalDisplayedPosts, (index, i) => {\n    return _openBlock(), _createBlock(_component_newsPost, {\n      key: i,\n      postinfo: {\n        title: _ctx.posts.articles[i].title,\n        desc: _ctx.posts.articles[i].description,\n        content: _ctx.posts.articles[i].content,\n        image: _ctx.posts.articles[i].urlToImage\n      }\n    }, null, 8 /* PROPS */, [\"postinfo\"]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _hoisted_4)), _createElementVNode(\"div\", null, [_createVNode(_component_paginationPostBoard, {\n    total: _ctx.totalposts,\n    item: _ctx.amount\n  }, null, 8 /* PROPS */, [\"total\", \"item\"])])], 32 /* HYDRATE_EVENTS */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_3","_createElementBlock","_cache","args","_ctx","changePage","posts","_hoisted_1","_Fragment","_renderList","totalDisplayedPosts","index","i","_createBlock","_component_newsPost","key","postinfo","articles","title","desc","description","content","urlToImage","_hoisted_2","_hoisted_4","_createVNode","_component_paginationPostBoard","total","totalposts","item","amount"],"sources":["D:\\learn_with_panchenko\\src\\components\\PostBoard.vue"],"sourcesContent":["<template>\r\n    <div class=\"panel\" @pageChanged=\"changePage\">\r\n        <div v-if=\"posts\" class=\"post-board\">\r\n            <newsPost v-for=\"(index, i) in totalDisplayedPosts\" :key=\"i\" :postinfo=\"{\r\n                title: posts.articles[i].title, desc: posts.articles[i].description, content: posts.articles[i].content\r\n                , image: posts.articles[i].urlToImage\r\n            }\" />\r\n        </div>\r\n        <div v-else>\r\n            <p>Sorry, try another request</p>\r\n        </div>\r\n        <div>\r\n            <paginationPostBoard :total=totalposts :item=amount />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport newsPost from './News_Post.vue';\r\nimport paginationPostBoard from \"./Pagination.vue\"\r\nexport default {\r\n    name: 'postPanel',\r\n    props: {\r\n        newQuerry: {\r\n            type: String,\r\n            required: true,\r\n            default: () => {\r\n                return \"Apple\"\r\n            }\r\n        },\r\n        amount: {\r\n            type: Number,\r\n            default() {\r\n                return 8;\r\n            }\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            posts: null,\r\n            selectedPost: null,\r\n            page: 1,\r\n            totalposts: 10,\r\n            itemsOnPage:8\r\n        }\r\n    },\r\n    components: {\r\n        newsPost,\r\n        paginationPostBoard\r\n    },\r\n    watch: {\r\n        newQuerry: 'fetchData',\r\n        amount: 'changeTotalPostsOnPage'\r\n    },\r\n    methods: {\r\n        fetchData() {\r\n            let querry = 'q=' + this.newQuerry + \"&\";\r\n            var url = 'https://newsapi.org/v2/everything?' +\r\n                querry +\r\n                'from=2023-08-20&' +\r\n                'sortBy=popularity&' +\r\n                'apiKey=a053a630c58d46509b7fe99976290f7f';\r\n\r\n            var req = new Request(url);\r\n\r\n            fetch(req)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    this.posts = data;\r\n                    JSON.stringify(this.posts);\r\n                    this.totalposts = this.posts.articles.length;\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Помилка: ' + error);\r\n                });\r\n        },\r\n        changeTotalPostsOnPage(amount) {\r\n            this.itemsOnPage = amount;\r\n        },\r\n        changePage(data){\r\n            this.page=data;\r\n        }\r\n    },\r\n    computed: {\r\n        totalDisplayedPosts() {\r\n            const startIndex = (this.page - 1) * this.itemsOnPage;\r\n            const endIndex = startIndex + this.itemsOnPage;\r\n            return this.posts.articles.slice(startIndex, endIndex) : [];\r\n            // return Math.min(this.totalposts, this.itemsOnPage);\r\n        },\r\n    },\r\n    mounted() {\r\n        this.fetchData();\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.post-board {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n}\r\n</style>"],"mappings":";;;EAE0BA,KAAK,EAAC;;;;;gCAOpBC,mBAAA,CAAiC,WAA9B,4BAA0B;oBAA7BC,UAAiC,C;;;;uBARzCC,mBAAA,CAaM;IAbDH,KAAK,EAAC,OAAO;IAAE,gBAAW,EAAAI,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC5BC,IAAA,CAAAE,KAAK,I,cAAhBL,mBAAA,CAKM,OALNM,UAKM,I,kBAJFN,mBAAA,CAGKO,SAAA,QAAAC,WAAA,CAH0BL,IAAA,CAAAM,mBAAmB,GAAhCC,KAAK,EAAEC,CAAC;yBAA1BC,YAAA,CAGKC,mBAAA;MAHgDC,GAAG,EAAEH,CAAC;MAAGI,QAAQ;eAA4BZ,IAAA,CAAAE,KAAK,CAACW,QAAQ,CAACL,CAAC,EAAEM,KAAK;QAAAC,IAAA,EAAQf,IAAA,CAAAE,KAAK,CAACW,QAAQ,CAACL,CAAC,EAAEQ,WAAW;QAAAC,OAAA,EAAWjB,IAAA,CAAAE,KAAK,CAACW,QAAQ,CAACL,CAAC,EAAES,OAAO;eAA2BjB,IAAA,CAAAE,KAAK,CAACW,QAAQ,CAACL,CAAC,EAAEU;;;qDAKnPrB,mBAAA,CAEM,OAAAsB,UAAA,EAAAC,UAAA,IACNzB,mBAAA,CAEM,cADF0B,YAAA,CAAsDC,8BAAA;IAAhCC,KAAK,EAACvB,IAAA,CAAAwB,UAAU;IAAEC,IAAI,EAACzB,IAAA,CAAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}