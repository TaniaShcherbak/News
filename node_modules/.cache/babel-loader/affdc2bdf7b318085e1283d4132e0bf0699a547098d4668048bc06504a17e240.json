{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pagination\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.totalPages, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item\n    }, [_createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = $event => $options.changePage(_ctx.page)),\n      class: _normalizeClass([\"pagination-button\", {\n        active: $data.currentPage === item\n      }])\n    }, _toDisplayString(_ctx.page), 3 /* TEXT, CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$options","totalPages","item","key","onClick","_cache","$event","changePage","_ctx","page","_normalizeClass","active","$data","currentPage"],"sources":["D:\\learn_with_panchenko\\src\\components\\Pagination.vue"],"sourcesContent":["<template>\r\n    <div class=\"pagination\">\r\n        <ul>\r\n            <li v-for=\"item in totalPages\" :key=\"item\">\r\n                <button @click=\"changePage(page)\" class=\"pagination-button\" :class=\"{ active: currentPage === item }\">{{\r\n                    page\r\n                }}</button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"paginationPostBoard\",\r\n    props: {\r\n        total: {\r\n            type: Number,\r\n            default() {\r\n                return 1;\r\n            }\r\n        },\r\n        item: {\r\n            type: Number,\r\n        },\r\n        updatePage: {\r\n            type: Number\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            currentPage: 1\r\n        }\r\n    },\r\n    watch: {\r\n        updatePage: 'UpdatePagination'\r\n    },\r\n    computed: {\r\n        totalPages() {\r\n            return Math.ceil(this.total / this.item);\r\n        }\r\n    },\r\n    methods: {\r\n        changePage(pageNumber) {\r\n            this.currentPage = pageNumber;\r\n            this.$emit('pageChanged', pageNumber)\r\n        },\r\n        UpdatePagination() {\r\n            this.currentPage = 1;\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\nul {\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n}\r\n\r\n.pagination {\r\n    margin: 0 auto;\r\n}\r\n\r\nul li {\r\n    list-style-type: none;\r\n}\r\n\r\n.active {\r\n    border-color: red;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAY;;uBAAvBC,mBAAA,CAQM,OARNC,UAQM,GAPFC,mBAAA,CAMK,c,kBALDF,mBAAA,CAIKG,SAAA,QAAAC,WAAA,CAJcC,QAAA,CAAAC,UAAU,EAAlBC,IAAI;yBAAfP,mBAAA,CAIK;MAJ2BQ,GAAG,EAAED;IAAI,IACrCL,mBAAA,CAEW;MAFFO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEN,QAAA,CAAAO,UAAU,CAACC,IAAA,CAAAC,IAAI;MAAGf,KAAK,EAAAgB,eAAA,EAAC,mBAAmB;QAAAC,MAAA,EAAmBC,KAAA,CAAAC,WAAW,KAAKX;MAAI;wBAC9FM,IAAA,CAAAC,IAAI,wB"},"metadata":{},"sourceType":"module","externalDependencies":[]}