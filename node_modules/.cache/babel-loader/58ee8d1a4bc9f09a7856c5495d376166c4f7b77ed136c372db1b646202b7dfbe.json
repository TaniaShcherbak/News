{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_v_else = _resolveDirective(\"v-else\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createTextVNode(\" My first component \" + _toDisplayString($data.test == 42 ? \"it is 42\" : \"not 42\") + \" \", 1 /* TEXT */), _createElementVNode(\"p\", {\n    class: _normalizeClass($data.ClassName)\n  }, \"Some text\", 2 /* CLASS */), $data.test == 43 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, \"if work\")) : _createCommentVNode(\"v-if\", true), _withDirectives((_openBlock(), _createElementBlock(\"p\", null, [_createTextVNode(\"else work\")])), [[_directive_v_else]])]);\n}","map":{"version":3,"names":["_createElementBlock","_toDisplayString","$data","test","_createElementVNode","class","_normalizeClass","ClassName","_hoisted_1"],"sources":["D:\\learn_with_panchenko\\src\\components\\Post.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    My first component\r\n    {{ test == 42 ? \"it is 42\" : \"not 42\" }}\r\n    <p v-bind:class=\"ClassName\">Some text</p>\r\n    <p v-if=\"test == 43\">if work</p>\r\n    <p v-v-else>else work</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"PostComponent\",\r\n  props: ['name'],\r\n  data() {\r\n    return {\r\n      test: 42,\r\n      ClassName: \"my-first-component\",\r\n    };\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;;;uBACEA,mBAAA,CAMM,c,iBAND,sBAEH,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,IAAI,kCAAiC,GACxC,iBAAAC,mBAAA,CAAyC;IAA/BC,KAAK,EAAAC,eAAA,CAAEJ,KAAA,CAAAK,SAAS;KAAE,WAAS,kBAC5BL,KAAA,CAAAC,IAAI,U,cAAbH,mBAAA,CAAgC,KAAAQ,UAAA,EAAX,SAAO,K,kEAC5BR,mBAAA,CAAyB,Y,iBAAb,WAAS,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}