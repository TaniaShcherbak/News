{"ast":null,"code":"export default {\n  name: \"weatherPanel\",\n  data() {\n    return {\n      weather: null,\n      icon: null,\n      city: 'Vinnitsa'\n    };\n  },\n  methods: {\n    getrequest() {\n      let search = document.getElementById(\"searchWeather\").value;\n      this.city = search;\n      this.fetchWeather();\n      document.getElementById(\"searchWeather\").value = \"\";\n    },\n    fetchWeather() {\n      const url = 'https://weatherapi-com.p.rapidapi.com/forecast.json?q=' + this.city + '&days=3';\n      const options = {\n        method: 'GET',\n        headers: {\n          'X-RapidAPI-Key': '63832d5d1fmshab60483220d5186p143190jsnbc1bac78b8e2',\n          'X-RapidAPI-Host': 'weatherapi-com.p.rapidapi.com'\n        }\n      };\n      fetch(url, options).then(response => {\n        return response.json();\n      }).then(data => {\n        this.weather = data;\n        JSON.stringify(this.weather);\n        this.icon = \"https:\" + this.weather.current.condition.icon;\n      }).catch(error => {\n        console.log('Помилка: ' + error);\n      });\n    }\n  },\n  mounted() {\n    this.fetchWeather();\n  }\n};","map":{"version":3,"names":["name","data","weather","icon","city","methods","getrequest","search","document","getElementById","value","fetchWeather","url","options","method","headers","fetch","then","response","json","JSON","stringify","current","condition","catch","error","console","log","mounted"],"sources":["src/components/Weather.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"weather\" class=\"weather\">\r\n        <div>\r\n            <p>{{ weather.location.name }} {{ weather.location.country }}</p>\r\n            <p>{{ weather.location.localtime }}</p>\r\n            <p>{{ weather.current.temp_c }} &#8451;</p>\r\n            <input type=\"text\" placeholder=\"type in city\" name=\"searchWeather\" id=\"searchWeather\" @keyup.enter=\"getrequest\">\r\n        </div>\r\n        <div>\r\n            <img :src=\"icon\" alt=\"day/night\">\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"weatherPanel\",\r\n    data() {\r\n        return {\r\n            weather: null,\r\n            icon: null,\r\n            city: 'Vinnitsa'\r\n        }\r\n    },\r\n    methods: {\r\n        getrequest() {\r\n            let search = document.getElementById(\"searchWeather\").value;\r\n            this.city = search;\r\n            this.fetchWeather();\r\n            document.getElementById(\"searchWeather\").value = \"\";\r\n        },\r\n        fetchWeather() {\r\n            const url = 'https://weatherapi-com.p.rapidapi.com/forecast.json?q=' + this.city + '&days=3';\r\n            const options = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'X-RapidAPI-Key': '63832d5d1fmshab60483220d5186p143190jsnbc1bac78b8e2',\r\n                    'X-RapidAPI-Host': 'weatherapi-com.p.rapidapi.com'\r\n                }\r\n            };\r\n            fetch(url, options)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => {\r\n                    this.weather = data;\r\n                    JSON.stringify(this.weather);\r\n                    this.icon = \"https:\" + this.weather.current.condition.icon;\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Помилка: ' + error);\r\n                });\r\n        }\r\n    },\r\n    mounted() {\r\n        this.fetchWeather();\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.weather {\r\n    width: 400px;\r\n    background-color: #15222c;\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    border-radius: 15px;\r\n    padding: 20px;\r\n}\r\n\r\n.weather img {\r\n    width: 100px;\r\n}\r\n\r\n.weather input {\r\n    height: 30px;\r\n    padding-left: 10px;\r\n}\r\n\r\n.weather input::placeholder {\r\n    padding-left: 5px;\r\n}\r\n</style>"],"mappings":"AAeA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,IAAA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,IAAAC,MAAA,GAAAC,QAAA,CAAAC,cAAA,kBAAAC,KAAA;MACA,KAAAN,IAAA,GAAAG,MAAA;MACA,KAAAI,YAAA;MACAH,QAAA,CAAAC,cAAA,kBAAAC,KAAA;IACA;IACAC,aAAA;MACA,MAAAC,GAAA,mEAAAR,IAAA;MACA,MAAAS,OAAA;QACAC,MAAA;QACAC,OAAA;UACA;UACA;QACA;MACA;MACAC,KAAA,CAAAJ,GAAA,EAAAC,OAAA,EACAI,IAAA,CAAAC,QAAA;QACA,OAAAA,QAAA,CAAAC,IAAA;MACA,GACAF,IAAA,CAAAhB,IAAA;QACA,KAAAC,OAAA,GAAAD,IAAA;QACAmB,IAAA,CAAAC,SAAA,MAAAnB,OAAA;QACA,KAAAC,IAAA,mBAAAD,OAAA,CAAAoB,OAAA,CAAAC,SAAA,CAAApB,IAAA;MACA,GACAqB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,eAAAF,KAAA;MACA;IACA;EACA;EACAG,QAAA;IACA,KAAAjB,YAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}