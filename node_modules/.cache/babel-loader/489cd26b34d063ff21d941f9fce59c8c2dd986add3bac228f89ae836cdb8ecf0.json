{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pagination\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.totalPages, page => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: page\n    }, [_createElementVNode(\"button\", {\n      onClick: $event => _ctx.changePage(page),\n      class: _normalizeClass([\"pagination-button\", {\n        active: _ctx.isPageActive(page)\n      }])\n    }, _toDisplayString(page), 11 /* TEXT, CLASS, PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","_ctx","totalPages","page","key","onClick","$event","changePage","_normalizeClass","active","isPageActive","_hoisted_2"],"sources":["D:\\learn_with_panchenko\\src\\components\\Pagination.vue"],"sourcesContent":["<template>\r\n    <div class=\"pagination\">\r\n        <ul>\r\n            <li v-for=\"page in totalPages\" :key=\"page\">\r\n                <button @click=\"changePage(page)\" class=\"pagination-button\"\r\n                    :class=\"{ active: isPageActive(page) }\">{{ page\r\n                    }}</button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"paginationPostBoard\",\r\n    props: {\r\n        total: {\r\n            type: Number,\r\n            default() {\r\n                return 1;\r\n            }\r\n        },\r\n        item: {\r\n            type: Number,\r\n        },\r\n        pageEl: {\r\n            type: Number,\r\n            default() {\r\n                return 1;\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        pageEl: 'changePage',\r\n    },\r\n    data() {\r\n        return {\r\n            currentPage: {\r\n                type: Number,\r\n                default() {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ,\r\n    computed: {\r\n        totalPages() {\r\n            return Math.ceil(this.total / this.item);\r\n        }\r\n    },\r\n    methods: {\r\n        changePage(pageNumber) {\r\n            this.currentPage = pageNumber;\r\n         (document.querySelectorAll('.pagination-button')[0].classList.toggle('active')\r\n            this.$emit('pageChanged', pageNumber)\r\n        },\r\n        isPageActive(page) {\r\n      // Проверяем, является ли текущая страница равной странице кнопки\r\n      return this.currentPage === page || (this.currentPage && page === 1);\r\n    },\r\n    },\r\n\r\n}\r\n</script>\r\n<style>\r\nul {\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n}\r\n\r\n.pagination {\r\n    margin: 0 auto;\r\n}\r\n\r\nul li {\r\n    list-style-type: none;\r\n}\r\n\r\n.active {\r\n    border-color: red;\r\n}\r\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAY;;;uBAAvBC,mBAAA,CAQM,OARNC,UAQM,GAPFC,mBAAA,CAMK,c,kBALDF,mBAAA,CAIKG,SAAA,QAAAC,WAAA,CAJcC,IAAA,CAAAC,UAAU,EAAlBC,IAAI;yBAAfP,mBAAA,CAIK;MAJ2BQ,GAAG,EAAED;IAAI,IACrCL,mBAAA,CAEe;MAFNO,OAAK,EAAAC,MAAA,IAAEL,IAAA,CAAAM,UAAU,CAACJ,IAAI;MAAGR,KAAK,EAAAa,eAAA,EAAC,mBAAmB;QAAAC,MAAA,EACrCR,IAAA,CAAAS,YAAY,CAACP,IAAI;MAAA;wBAAQA,IAAI,gCAAAQ,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}